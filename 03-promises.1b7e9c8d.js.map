{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAExBD,SAASC,cAAc,UAyBnC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAiBC,MAAU,GAEvDA,EAAM,G,CAjCbL,EAAKa,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAEN,MAAMC,EAASF,EAAMG,cAErB,IAAIC,EAAaC,OAAOH,EAAOX,MAAMe,OACrC,MAAMC,EAAYF,OAAOH,EAAOM,KAAKF,OAC/BG,EAAcJ,OAAOH,EAAOQ,OAAOJ,OAEzC,IAAK,IAAIhB,EAAW,EAAGA,GAAYmB,EAAanB,IAC9CD,EAAcC,EAAUc,GACrBO,MAAKL,IACJM,QAAQC,IAAIP,EAAM,IAEnBQ,OAAMC,IACLH,QAAQC,IAAIE,EAAM,IAEtBX,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nconst btn = document.querySelector('button');\n\nform.addEventListener('submit', submitt);\n\nfunction submitt(event) {\n  event.preventDefault();\n\n  const formEl = event.currentTarget;\n\n  let delayInput = Number(formEl.delay.value);\n  const stepInput = Number(formEl.step.value);\n  const amountInput = Number(formEl.amount.value);\n\n  for (let position = 1; position <= amountInput; position++) {\n    createPromise(position, delayInput)\n      .then(value => {\n        console.log(value);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    delayInput += stepInput;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","formEl","currentTarget","delayInput","Number","value","stepInput","step","amountInput","amount","then","console","log","catch","error"],"version":3,"file":"03-promises.1b7e9c8d.js.map"}