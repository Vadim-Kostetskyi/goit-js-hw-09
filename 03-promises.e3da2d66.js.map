{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAExBD,SAASC,cAAc,UAyBnC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAuCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAErDA,E,IAjCPL,EAAKc,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAQN,IANA,IAAMC,EAASF,EAAMG,cAEjBC,EAAaC,OAAOH,EAAOZ,MAAMgB,OAC/BC,EAAYF,OAAOH,EAAOM,KAAKF,OAC/BG,EAAcJ,OAAOH,EAAOQ,OAAOJ,OAEhCjB,EAAW,EAAGA,GAAYoB,EAAapB,IAC9CD,EAAcC,EAAUe,GACrBO,MAAK,SAAAL,GACJM,QAAQC,IAAIP,E,IAEbQ,OAAM,SAAAC,GACLH,QAAQC,IAAIE,E,IAEhBX,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nconst btn = document.querySelector('button');\n\nform.addEventListener('submit', submitt);\n\nfunction submitt(event) {\n  event.preventDefault();\n\n  const formEl = event.currentTarget;\n\n  let delayInput = Number(formEl.delay.value);\n  const stepInput = Number(formEl.step.value);\n  const amountInput = Number(formEl.amount.value);\n\n  for (let position = 1; position <= amountInput; position++) {\n    createPromise(position, delayInput)\n      .then(value => {\n        console.log(value);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    delayInput += stepInput;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","event","preventDefault","formEl","currentTarget","delayInput","Number","value","stepInput","step","amountInput","amount","then","console","log","catch","error"],"version":3,"file":"03-promises.e3da2d66.js.map"}